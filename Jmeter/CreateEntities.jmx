<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SAN widgets data update" enabled="true">
      <stringProp name="TestPlan.comments">Simulate sensors sending data</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CreateEntityTask" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Three sensors sending updated data</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create TaskEntity" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;Task1&quot;,&#xd;
	&quot;type&quot;: &quot;Task&quot;,&#xd;
	&quot;taskOrder&quot;: {&#xd;
		&quot;type&quot;: &quot;Integer&quot;,&#xd;
		&quot;value&quot;: 0&#xd;
	},&#xd;
	&quot;taskTd&quot;: {&#xd;
		&quot;type&quot;: &quot;Integer&quot;,&#xd;
		&quot;value&quot;: 0&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Task" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;task&quot;: {&#xd;
		&quot;type&quot;: &quot;Integer&quot;,&#xd;
		&quot;value&quot;: 2&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task1/attrs</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Entity" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscription" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/subscriptions/5bc9c44c540f1e3f35bf9b55</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Task" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;task&quot;: {&#xd;
		&quot;type&quot;: &quot;Integer&quot;,&#xd;
		&quot;value&quot;: 1&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task1/attrs</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Zagreb Demo" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Three sensors sending updated data</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="ServerSettings" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="OCB_Address" elementType="Argument">
              <stringProp name="Argument.name">OCB_Address</stringProp>
              <stringProp name="Argument.value">10.64.10.144</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="OCB_Port" elementType="Argument">
              <stringProp name="Argument.name">OCB_Port</stringProp>
              <stringProp name="Argument.value">1026</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NewTask" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{ &#xd;
	&quot;state&quot; : {&#xd;
		&quot;type&quot; : &quot;Number&quot;,&#xd;
		&quot;value&quot; : 1&#xd;
	},&#xd;
	&quot;taskId&quot;: {&#xd;
		&quot;type&quot;: &quot;Number&quot;,&#xd;
		&quot;value&quot;: 1&#xd;
	}&#xd;
} </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task1/attrs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="StopTask" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{ &#xd;
	&quot;state&quot; : {&#xd;
		&quot;type&quot; : &quot;Number&quot;,&#xd;
		&quot;value&quot; : 4&#xd;
	},&#xd;
	&quot;taskId&quot;: {&#xd;
		&quot;type&quot;: &quot;Number&quot;,&#xd;
		&quot;value&quot;: 1&#xd;
	}&#xd;
} </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task1/attrs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ResetTask" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{ &#xd;
	&quot;state&quot; : {&#xd;
		&quot;type&quot; : &quot;Number&quot;,&#xd;
		&quot;value&quot; : 5&#xd;
	},&#xd;
	&quot;taskId&quot;: {&#xd;
		&quot;type&quot;: &quot;Number&quot;,&#xd;
		&quot;value&quot;: 1&#xd;
	}&#xd;
} </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task1/attrs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AGV_at_load_destination" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: [{&#xd;
&#xd;
		&quot;id&quot;: &quot;RAN1&quot;,&#xd;
		&quot;type&quot;: &quot;RAN&quot;,&#xd;
		&quot;Agv&quot;: {&#xd;
			&quot;type&quot;: &quot;Integer&quot;,&#xd;
			&quot;value&quot;: 0&#xd;
		}&#xd;
&#xd;
	}],&#xd;
	&quot;subscriptionId&quot;: &quot;2&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ran</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create San_demo" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;SAN_demo&quot;,&#xd;
	&quot;type&quot;: &quot;SensorAgent&quot;,&#xd;
	&quot;modifiedTime&quot;: {&#xd;
		&quot;type&quot;: &quot;String&quot;,&#xd;
		&quot;value&quot;: &quot;2018-08-25T19:34:00&quot;,&#xd;
		&quot;metadata&quot;: {&#xd;
			&quot;timeFormat&quot;: {&#xd;
				&quot;value&quot;: &quot;ISO8601&quot;,&#xd;
				&quot;type&quot;: &quot;String&quot;&#xd;
			}&#xd;
		}&#xd;
	},&#xd;
	&quot;sensorData&quot;: {&#xd;
		&quot;type&quot;: &quot;Array&quot;,&#xd;
		&quot;value&quot;: [&#xd;
			{&#xd;
				&quot;sensorId&quot;: {&#xd;
					&quot;type&quot;: &quot;String&quot;,&#xd;
					&quot;value&quot;: &quot;IR_1&quot;,&#xd;
					&quot;metadata&quot;: {}&#xd;
				},&#xd;
				&quot;sensorType&quot;: {&#xd;
					&quot;type&quot;: &quot;String&quot;,&#xd;
					&quot;value&quot;: &quot;Infrared Sensor&quot;,&#xd;
					&quot;metadata&quot;: {}&#xd;
				},&#xd;
&#xd;
				&quot;measurementType&quot;: {&#xd;
					&quot;type&quot;: &quot;String&quot;,&#xd;
					&quot;value&quot;: &quot;Object Presence&quot;,&#xd;
					&quot;metadata&quot;: {}&#xd;
				},&#xd;
				&quot;readings&quot;: {&#xd;
					&quot;type&quot;: &quot;Array&quot;,&#xd;
					&quot;value&quot;: [{&#xd;
						&quot;reading&quot;: {&#xd;
							&quot;value&quot;: false,&#xd;
							&quot;type&quot;: &quot;Boolean&quot;,&#xd;
							&quot;metadata&quot;: {&#xd;
								&quot;unit&quot;: {&#xd;
									&quot;value&quot;: &quot;none&quot;,&#xd;
									&quot;type&quot;: &quot;String&quot;&#xd;
								}&#xd;
							}&#xd;
						},&#xd;
						&quot;modifiedTime&quot;: {&#xd;
							&quot;type&quot;: &quot;String&quot;,&#xd;
							&quot;value&quot;: &quot;2018-08-25T19:34:00&quot;,&#xd;
							&quot;metadata&quot;: {&#xd;
								&quot;timeFormat&quot;: {&#xd;
									&quot;value&quot;: &quot;ISO8601&quot;,&#xd;
									&quot;type&quot;: &quot;String&quot;&#xd;
								}&#xd;
							}&#xd;
						}&#xd;
					}]&#xd;
				}&#xd;
			},&#xd;
{&#xd;
				&quot;sensorId&quot;: {&#xd;
					&quot;type&quot;: &quot;String&quot;,&#xd;
					&quot;value&quot;: &quot;IR_2&quot;,&#xd;
					&quot;metadata&quot;: {}&#xd;
				},&#xd;
				&quot;sensorType&quot;: {&#xd;
					&quot;type&quot;: &quot;String&quot;,&#xd;
					&quot;value&quot;: &quot;Infrared Sensor&quot;,&#xd;
					&quot;metadata&quot;: {}&#xd;
				},&#xd;
&#xd;
				&quot;measurementType&quot;: {&#xd;
					&quot;type&quot;: &quot;String&quot;,&#xd;
					&quot;value&quot;: &quot;Object Presence&quot;,&#xd;
					&quot;metadata&quot;: {}&#xd;
				},&#xd;
				&quot;readings&quot;: {&#xd;
					&quot;type&quot;: &quot;Array&quot;,&#xd;
					&quot;value&quot;: [{&#xd;
						&quot;reading&quot;: {&#xd;
							&quot;value&quot;: false,&#xd;
							&quot;type&quot;: &quot;Boolean&quot;,&#xd;
							&quot;metadata&quot;: {&#xd;
								&quot;unit&quot;: {&#xd;
									&quot;value&quot;: &quot;none&quot;,&#xd;
									&quot;type&quot;: &quot;String&quot;&#xd;
								}&#xd;
							}&#xd;
						},&#xd;
						&quot;modifiedTime&quot;: {&#xd;
							&quot;type&quot;: &quot;String&quot;,&#xd;
							&quot;value&quot;: &quot;2018-08-25T19:34:00&quot;,&#xd;
							&quot;metadata&quot;: {&#xd;
								&quot;timeFormat&quot;: {&#xd;
									&quot;value&quot;: &quot;ISO8601&quot;,&#xd;
									&quot;type&quot;: &quot;String&quot;&#xd;
								}&#xd;
							}&#xd;
						}&#xd;
					}]&#xd;
				}&#xd;
			}&#xd;
		],&#xd;
		&quot;metadata&quot;: {}&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.64.10.144</stringProp>
          <stringProp name="HTTPSampler.port">1026</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Entity" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/SAN_demo</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AGV_is_loaded_1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{	 &#xd;
	&quot;modifiedTime&quot;: {&#xd;
		&quot;type&quot;: &quot;String&quot;,&#xd;
		&quot;value&quot;: &quot;2018-08-25T19:36:00&quot;,&#xd;
		&quot;metadata&quot;: {&#xd;
			&quot;timeFormat&quot;: {&#xd;
				&quot;value&quot;: &quot;ISO8601&quot;,&#xd;
				&quot;type&quot;: &quot;String&quot;&#xd;
			}&#xd;
		}&#xd;
	},&#xd;
	&quot;sensorData&quot;: {&#xd;
		&quot;type&quot;: &quot;Array&quot;,&#xd;
		&quot;value&quot;: [{&#xd;
			&quot;measurementType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;Object Presence&quot;&#xd;
			},&#xd;
			&quot;readings&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;Array&quot;,&#xd;
				&quot;value&quot;: [{&#xd;
					&quot;modifiedTime&quot;: {&#xd;
						&quot;metadata&quot;: {&#xd;
							&quot;timeFormat&quot;: {&#xd;
								&quot;type&quot;: &quot;String&quot;,&#xd;
								&quot;value&quot;: &quot;ISO8601&quot;&#xd;
							}&#xd;
						},&#xd;
						&quot;type&quot;: &quot;String&quot;,&#xd;
						&quot;value&quot;: &quot;2018-11-14T12:31:33.282441&quot;&#xd;
					},&#xd;
					&quot;reading&quot;: {&#xd;
						&quot;type&quot;: &quot;Boolean&quot;,&#xd;
						&quot;value&quot;: true&#xd;
					}&#xd;
				}]&#xd;
			},&#xd;
			&quot;sensorId&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR_1&quot;&#xd;
			},&#xd;
			&quot;sensorType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR Sensor&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;measurementType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;Object Presence&quot;&#xd;
			},&#xd;
			&quot;readings&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;Array&quot;,&#xd;
				&quot;value&quot;: []&#xd;
			},&#xd;
			&quot;sensorId&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR_2&quot;&#xd;
			},&#xd;
			&quot;sensorType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR Sensor&quot;&#xd;
			}&#xd;
		}],&#xd;
		&quot;metadata&quot;: {}&#xd;
	}&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.64.10.144</stringProp>
          <stringProp name="HTTPSampler.port">1026</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/SAN_demo/attrs</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AGV_is_unloaded_0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{	 &#xd;
	&quot;modifiedTime&quot;: {&#xd;
		&quot;type&quot;: &quot;String&quot;,&#xd;
		&quot;value&quot;: &quot;2018-08-25T19:36:00&quot;,&#xd;
		&quot;metadata&quot;: {&#xd;
			&quot;timeFormat&quot;: {&#xd;
				&quot;value&quot;: &quot;ISO8601&quot;,&#xd;
				&quot;type&quot;: &quot;String&quot;&#xd;
			}&#xd;
		}&#xd;
	},&#xd;
	&quot;sensorData&quot;: {&#xd;
		&quot;type&quot;: &quot;Array&quot;,&#xd;
		&quot;value&quot;: [{&#xd;
			&quot;measurementType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;Object Presence&quot;&#xd;
			},&#xd;
			&quot;readings&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;Array&quot;,&#xd;
				&quot;value&quot;: [{&#xd;
					&quot;modifiedTime&quot;: {&#xd;
						&quot;metadata&quot;: {&#xd;
							&quot;timeFormat&quot;: {&#xd;
								&quot;type&quot;: &quot;String&quot;,&#xd;
								&quot;value&quot;: &quot;ISO8601&quot;&#xd;
							}&#xd;
						},&#xd;
						&quot;type&quot;: &quot;String&quot;,&#xd;
						&quot;value&quot;: &quot;2018-11-14T12:31:33.282441&quot;&#xd;
					},&#xd;
					&quot;reading&quot;: {&#xd;
						&quot;type&quot;: &quot;Boolean&quot;,&#xd;
						&quot;value&quot;: true&#xd;
					}&#xd;
				}]&#xd;
			},&#xd;
			&quot;sensorId&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR_2&quot;&#xd;
			},&#xd;
			&quot;sensorType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR Sensor&quot;&#xd;
			}&#xd;
		}, {&#xd;
			&quot;measurementType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;Object Presence&quot;&#xd;
			},&#xd;
			&quot;readings&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;Array&quot;,&#xd;
				&quot;value&quot;: []&#xd;
			},&#xd;
			&quot;sensorId&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR_1&quot;&#xd;
			},&#xd;
			&quot;sensorType&quot;: {&#xd;
				&quot;metadata&quot;: {},&#xd;
				&quot;type&quot;: &quot;String&quot;,&#xd;
				&quot;value&quot;: &quot;IR Sensor&quot;&#xd;
			}&#xd;
		}],&#xd;
		&quot;metadata&quot;: {}&#xd;
	}&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.64.10.144</stringProp>
          <stringProp name="HTTPSampler.port">1026</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/SAN_demo/attrs</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AGV_at_unload_destination" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: [{&#xd;
&#xd;
		&quot;id&quot;: &quot;RAN1&quot;,&#xd;
		&quot;type&quot;: &quot;RAN&quot;,&#xd;
		&quot;Agv&quot;: {&#xd;
			&quot;type&quot;: &quot;Integer&quot;,&#xd;
			&quot;value&quot;: 0&#xd;
		}&#xd;
&#xd;
	}],&#xd;
	&quot;subscriptionId&quot;: &quot;2&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ran</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AGV_is_unloaded" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: [{&#xd;
&#xd;
		&quot;id&quot;: &quot;SAN2&quot;,&#xd;
		&quot;type&quot;: &quot;SAN&quot;,&#xd;
		&quot;Sensor&quot;: {&#xd;
			&quot;type&quot;: &quot;Integer&quot;,&#xd;
			&quot;value&quot;: 1&#xd;
		}&#xd;
&#xd;
	}],&#xd;
	&quot;subscriptionId&quot;: &quot;1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/san</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AGV_at_waiting_area" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;data&quot;: [{&#xd;
&#xd;
		&quot;id&quot;: &quot;RAN1&quot;,&#xd;
		&quot;type&quot;: &quot;RAN&quot;,&#xd;
		&quot;Agv&quot;: {&#xd;
			&quot;type&quot;: &quot;Integer&quot;,&#xd;
			&quot;value&quot;: 5&#xd;
		}&#xd;
&#xd;
	}],&#xd;
	&quot;subscriptionId&quot;: &quot;2&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ran</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Task" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;task&quot;: {&#xd;
		&quot;type&quot;: &quot;Integer&quot;,&#xd;
		&quot;value&quot;: 2&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task1/attrs</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Task" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;task&quot;: {&#xd;
		&quot;type&quot;: &quot;Integer&quot;,&#xd;
		&quot;value&quot;: 1&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/entities/Task1/attrs</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Subscription" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${OCB_Address}</stringProp>
          <stringProp name="HTTPSampler.port">${OCB_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v2/subscriptions/5bc9c44c540f1e3f35bf9b55</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="queryContext_testing" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.64.10.144</stringProp>
          <stringProp name="HTTPSampler.port">1026</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/queryContext</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
